#!/usr/bin/python3
"""User methods module"""
from api.v1.views import app_views
from models.user import User
from models import storage
from flask import abort, jsonify, request, make_response

@app_views.route("/login", methods=["POST"])
def login():
    """login by email or username"""
    error = None
    if not request.json():
        return make_response(jsonify({"error": "Not a JSON"}), 400)
    username = request.get("user_name", None)
    password = request.get("password", None)

    user = storage.get_by_username_email(username)
    if not user:
        error = "Invalid username"
    elif user["password"] != password:
        error = "Invalid password"

    if error is None:
        return make_response(jsonify(user.to_dict()), 200)
    return make_response(jsonify({"error": "Placeholder error"}))

@app_views.route("/register", methods=["POST"])
def register():
    """registers new user"""
    if not request.json():
        return make_response(jsonify({"error": "Not a JSON"}), 400)
    new_user = request.json()
    if "first_name" not in new_user:
        return make_response(jsonify({"error": "No first name"}), 400)
    if "user_name" not in new_user:
        return make_response(jsonify({"error": "No username"}), 400)
    if "email" not in new_user:
        return make_response(jsonify({"error": "No email"}), 400)
    if "password" not in new_user:
        return make_response(jsonify({"error": "No password"}), 400)
    user = User(**new_user)
    user.save()
    return make_response(jsonify(user.to_dict()), 201)

@app_views.route("/users", methods=["GET"])
def get_users():
    """gets all the users available"""
    user_objs = storage.all("User").all()
    list_users = [user.to_dict() for user in user_objs]
    return jsonify(list_users)

@app_views.route("/delete/<user_id>", methods=["GET"])
def delete_user(user_id):
    """deletes a user"""
    user = storage.get("User", user_id)
    user.delete()
    storage.save()

